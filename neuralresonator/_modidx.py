# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/neuralresonator',
                'doc_host': 'https://rodrigodzf.github.io',
                'git_url': 'https://github.com/rodrigodzf/neuralresonator',
                'lib_path': 'neuralresonator'},
  'syms': { 'neuralresonator.data': { 'neuralresonator.data.MultiShapeMultiMaterialDataModule': ( 'data.html#multishapemultimaterialdatamodule',
                                                                                                  'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataModule.__init__': ( 'data.html#multishapemultimaterialdatamodule.__init__',
                                                                                                           'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataModule.predict_dataloader': ( 'data.html#multishapemultimaterialdatamodule.predict_dataloader',
                                                                                                                     'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataModule.setup': ( 'data.html#multishapemultimaterialdatamodule.setup',
                                                                                                        'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataModule.test_dataloader': ( 'data.html#multishapemultimaterialdatamodule.test_dataloader',
                                                                                                                  'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataModule.train_dataloader': ( 'data.html#multishapemultimaterialdatamodule.train_dataloader',
                                                                                                                   'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataModule.val_dataloader': ( 'data.html#multishapemultimaterialdatamodule.val_dataloader',
                                                                                                                 'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataset': ( 'data.html#multishapemultimaterialdataset',
                                                                                               'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataset.__getitem__': ( 'data.html#multishapemultimaterialdataset.__getitem__',
                                                                                                           'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataset.__init__': ( 'data.html#multishapemultimaterialdataset.__init__',
                                                                                                        'neuralresonator/data.py'),
                                      'neuralresonator.data.MultiShapeMultiMaterialDataset.__len__': ( 'data.html#multishapemultimaterialdataset.__len__',
                                                                                                       'neuralresonator/data.py'),
                                      'neuralresonator.data.SingleShapeDataset': ( 'data.html#singleshapedataset',
                                                                                   'neuralresonator/data.py'),
                                      'neuralresonator.data.SingleShapeDataset.__getitem__': ( 'data.html#singleshapedataset.__getitem__',
                                                                                               'neuralresonator/data.py'),
                                      'neuralresonator.data.SingleShapeDataset.__init__': ( 'data.html#singleshapedataset.__init__',
                                                                                            'neuralresonator/data.py'),
                                      'neuralresonator.data.SingleShapeDataset.__len__': ( 'data.html#singleshapedataset.__len__',
                                                                                           'neuralresonator/data.py'),
                                      'neuralresonator.data.generate_dataset': ('data.html#generate_dataset', 'neuralresonator/data.py'),
                                      'neuralresonator.data.generate_random_dataset': ( 'data.html#generate_random_dataset',
                                                                                        'neuralresonator/data.py')},
            'neuralresonator.dsp': { 'neuralresonator.dsp.IIRMethod': ('dsp.html#iirmethod', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.IIRParameters': ('dsp.html#iirparameters', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.IIRParameters.__init__': ( 'dsp.html#iirparameters.__init__',
                                                                                     'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.IIRParameters.__repr__': ( 'dsp.html#iirparameters.__repr__',
                                                                                     'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.IIRParameters.freqz': ('dsp.html#iirparameters.freqz', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.IIRParameters.pole_zero_plot': ( 'dsp.html#iirparameters.pole_zero_plot',
                                                                                           'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp._apply_biquad_fft': ('dsp.html#_apply_biquad_fft', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp._apply_biquad_tdfii': ('dsp.html#_apply_biquad_tdfii', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.apply_filter': ('dsp.html#apply_filter', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.apply_iir': ('dsp.html#apply_iir', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.biquad_freqz': ('dsp.html#biquad_freqz', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.constrain_complex_pole_or_zero': ( 'dsp.html#constrain_complex_pole_or_zero',
                                                                                             'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.mtanh': ('dsp.html#mtanh', 'neuralresonator/dsp.py'),
                                     'neuralresonator.dsp.pole_or_zero_to_iir_coeff': ( 'dsp.html#pole_or_zero_to_iir_coeff',
                                                                                        'neuralresonator/dsp.py')},
            'neuralresonator.modal': { 'neuralresonator.modal.Material': ('modal.html#material', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.Material.random': ('modal.html#material.random', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.Material.scaled': ('modal.html#material.scaled', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.Material.set_default_ranges': ( 'modal.html#material.set_default_ranges',
                                                                                              'neuralresonator/modal.py'),
                                       'neuralresonator.modal.Material.unscaled': ( 'modal.html#material.unscaled',
                                                                                    'neuralresonator/modal.py'),
                                       'neuralresonator.modal.MaterialRanges': ('modal.html#materialranges', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System': ('modal.html#system', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.__init__': ('modal.html#system.__init__', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.basis': ('modal.html#system.basis', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.damped_frequencies': ( 'modal.html#system.damped_frequencies',
                                                                                            'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.damping_coefficients': ( 'modal.html#system.damping_coefficients',
                                                                                              'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.eigenvalues': ( 'modal.html#system.eigenvalues',
                                                                                     'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.eigenvectors': ( 'modal.html#system.eigenvectors',
                                                                                      'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.get_mode_gains': ( 'modal.html#system.get_mode_gains',
                                                                                        'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.mass': ('modal.html#system.mass', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.mesh': ('modal.html#system.mesh', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.modes': ('modal.html#system.modes', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.System.render': ('modal.html#system.render', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.create_basis': ('modal.html#create_basis', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.create_mesh': ('modal.html#create_mesh', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.eigenvalue_to_frequency': ( 'modal.html#eigenvalue_to_frequency',
                                                                                          'neuralresonator/modal.py'),
                                       'neuralresonator.modal.frequency_to_eigenvalue': ( 'modal.html#frequency_to_eigenvalue',
                                                                                          'neuralresonator/modal.py'),
                                       'neuralresonator.modal.render_modes': ('modal.html#render_modes', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.render_modes_coeffs': ( 'modal.html#render_modes_coeffs',
                                                                                      'neuralresonator/modal.py'),
                                       'neuralresonator.modal.scale': ('modal.html#scale', 'neuralresonator/modal.py'),
                                       'neuralresonator.modal.unscale': ('modal.html#unscale', 'neuralresonator/modal.py')},
            'neuralresonator.models': { 'neuralresonator.models.CoefficientsFC': ( 'models.html#coefficientsfc',
                                                                                   'neuralresonator/models.py'),
                                        'neuralresonator.models.CoefficientsFC.__init__': ( 'models.html#coefficientsfc.__init__',
                                                                                            'neuralresonator/models.py'),
                                        'neuralresonator.models.CoefficientsFC.forward': ( 'models.html#coefficientsfc.forward',
                                                                                           'neuralresonator/models.py'),
                                        'neuralresonator.models.FC': ('models.html#fc', 'neuralresonator/models.py'),
                                        'neuralresonator.models.FC.__init__': ('models.html#fc.__init__', 'neuralresonator/models.py'),
                                        'neuralresonator.models.FC.forward': ('models.html#fc.forward', 'neuralresonator/models.py'),
                                        'neuralresonator.models.FCBlock': ('models.html#fcblock', 'neuralresonator/models.py'),
                                        'neuralresonator.models.FCBlock.__init__': ( 'models.html#fcblock.__init__',
                                                                                     'neuralresonator/models.py'),
                                        'neuralresonator.models.FCBlock.forward': ( 'models.html#fcblock.forward',
                                                                                    'neuralresonator/models.py')},
            'neuralresonator.scripts': { 'neuralresonator.scripts.gen_dataset': ('scripts.html#gen_dataset', 'neuralresonator/scripts.py'),
                                         'neuralresonator.scripts.log_hyperparameters': ( 'scripts.html#log_hyperparameters',
                                                                                          'neuralresonator/scripts.py'),
                                         'neuralresonator.scripts.train': ('scripts.html#train', 'neuralresonator/scripts.py')},
            'neuralresonator.shape': { 'neuralresonator.shape.generate_convex_mesh': ( 'shape.html#generate_convex_mesh',
                                                                                       'neuralresonator/shape.py'),
                                       'neuralresonator.shape.generate_convex_shape': ( 'shape.html#generate_convex_shape',
                                                                                        'neuralresonator/shape.py')},
            'neuralresonator.training': { 'neuralresonator.training.MultiShapeMultiMaterialLitModule': ( 'training.html#multishapemultimateriallitmodule',
                                                                                                         'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.__init__': ( 'training.html#multishapemultimateriallitmodule.__init__',
                                                                                                                  'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.configure_optimizers': ( 'training.html#multishapemultimateriallitmodule.configure_optimizers',
                                                                                                                              'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.forward': ( 'training.html#multishapemultimateriallitmodule.forward',
                                                                                                                 'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.get_first_and_plot': ( 'training.html#multishapemultimateriallitmodule.get_first_and_plot',
                                                                                                                            'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.on_test_epoch_end': ( 'training.html#multishapemultimateriallitmodule.on_test_epoch_end',
                                                                                                                           'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.step': ( 'training.html#multishapemultimateriallitmodule.step',
                                                                                                              'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.test_step': ( 'training.html#multishapemultimateriallitmodule.test_step',
                                                                                                                   'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.training_step': ( 'training.html#multishapemultimateriallitmodule.training_step',
                                                                                                                       'neuralresonator/training.py'),
                                          'neuralresonator.training.MultiShapeMultiMaterialLitModule.validation_step': ( 'training.html#multishapemultimateriallitmodule.validation_step',
                                                                                                                         'neuralresonator/training.py')},
            'neuralresonator.utilities': { 'neuralresonator.utilities.FFTLoss': ('utilities.html#fftloss', 'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.FFTLoss.__init__': ( 'utilities.html#fftloss.__init__',
                                                                                           'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.FFTLoss.forward': ( 'utilities.html#fftloss.forward',
                                                                                          'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.MelScaleLoss': ( 'utilities.html#melscaleloss',
                                                                                       'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.MelScaleLoss.__init__': ( 'utilities.html#melscaleloss.__init__',
                                                                                                'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.MelScaleLoss.forward': ( 'utilities.html#melscaleloss.forward',
                                                                                               'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.db20': ('utilities.html#db20', 'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.fft_loss': ( 'utilities.html#fft_loss',
                                                                                   'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.plot_sample': ( 'utilities.html#plot_sample',
                                                                                      'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.save_and_display_audio': ( 'utilities.html#save_and_display_audio',
                                                                                                 'neuralresonator/utilities.py'),
                                           'neuralresonator.utilities.to_zpk': ('utilities.html#to_zpk', 'neuralresonator/utilities.py')}}}
